{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAGtB,SAASC,IAAO,IAAD,EACFC,mBAAS,4BADP,mBACrBC,EADqB,KACdC,EADc,OAEIF,mBAAS,MAFb,mBAErBG,EAFqB,KAEXC,EAFW,OAGMJ,oBAAS,GAHf,mBAGrBK,EAHqB,KAGVC,EAHU,KAItBC,EAAcC,iBAAO,MA0B3B,SAASC,IACPC,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,wBACTE,EAAY,MACZE,GAAa,GAGf,IAAMM,EAAUjB,EAAQkB,KAAKC,MAAMX,EAAW,KACxCY,EAAUpB,EAASQ,EAAqB,GAAVS,GAEpC,OACE,yBAAKI,UAAU,OACb,4BAAKf,GAEL,yBAAKe,UAAU,SACb,8BAAOJ,GACP,mCACA,8BAAOG,IAGT,yBAAKC,UAAU,YACXX,GAAa,4BAAQY,QA9C7B,WAC6B,OAAxBV,EAAYI,UACfT,EAAS,uBACTI,GAAa,GACbC,EAAYI,QAAUO,aAAY,WAChCd,GAAY,SAAAD,GACV,OAAIA,EAAW,GACbM,IACO,GAEFN,EAAW,OAEnB,QAkCgB,SACdE,GAAa,4BAAQY,QA/B5B,WAC6B,OAAxBV,EAAYI,UACfD,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,eACTI,GAAa,MA0BK,QACd,4BAAQW,QAASR,GAAjB,WCzDRU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.59ddde5c.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction padTime(time) {\r\n  return time.toString().padStart(2, '0');\r\n}\r\n\r\nexport default function App() {\r\n  const [title, setTitle] = useState(\"Let the countdown begin!\");\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  function startTimer() {\r\n    if(intervalRef.current !== null) return;\r\n    setTitle(`You're doing great!`);\r\n    setIsRunning(true);\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft(timeLeft => {\r\n        if( timeLeft < 1) {\r\n          resetTimer(); \r\n          return 0\r\n        };\r\n        return timeLeft - 1\r\n      })\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  function stopTimer() {\r\n    if(intervalRef.current === null) return;\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null\r\n    setTitle(\"Keep it up!\");\r\n    setIsRunning(false);\r\n  }\r\n\r\n  function resetTimer() {\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null\r\n    setTitle(\"Start another round!\");\r\n    setTimeLeft(25 * 60);\r\n    setIsRunning(false);\r\n  }\r\n\r\n  const minutes = padTime(Math.floor(timeLeft / 60));\r\n  const seconds = padTime((timeLeft - minutes * 60));\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"timer\">\r\n        <span>{minutes}</span>\r\n        <span>:</span>\r\n        <span>{seconds}</span>\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        {!isRunning && <button onClick={startTimer}>Start</button>}\r\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}